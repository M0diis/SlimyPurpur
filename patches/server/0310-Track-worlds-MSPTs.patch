From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: M0diis <modestas.kazlauskas@ktu.edu>
Date: Thu, 18 Jan 2024 12:29:21 +0200
Subject: [PATCH] Track worlds MSPTs


diff --git a/src/main/java/io/papermc/paper/command/MSPTCommand.java b/src/main/java/io/papermc/paper/command/MSPTCommand.java
index 8b5293b0c696ef21d0101493ffa41b60bf0bc86b..4fae322e190fc7e48739a0c5f3a765637223a79a 100644
--- a/src/main/java/io/papermc/paper/command/MSPTCommand.java
+++ b/src/main/java/io/papermc/paper/command/MSPTCommand.java
@@ -49,7 +49,9 @@ public final class MSPTCommand extends Command {
         times.addAll(eval(server.tickTimes10s.getTimes()));
         times.addAll(eval(server.tickTimes60s.getTimes()));
 
-        sender.sendMessage(text().content("Server tick times ").color(GOLD)
+        // Purpur start - track world's MSPT
+        sender.sendMessage(text());
+        sender.sendMessage(text().content("World tick times ").color(GOLD)
             .append(text().color(YELLOW)
                 .append(
                     text("("),
@@ -69,15 +71,23 @@ public final class MSPTCommand extends Command {
                 text(":", YELLOW)
             )
         );
-        sender.sendMessage(text().content("◴ ").color(GOLD)
-            .append(text().color(GRAY)
-                .append(
-                    times.get(0), SLASH, times.get(1), SLASH, times.get(2), text(", ", YELLOW),
-                    times.get(3), SLASH, times.get(4), SLASH, times.get(5), text(", ", YELLOW),
-                    times.get(6), SLASH, times.get(7), SLASH, times.get(8)
+        for (net.minecraft.server.level.ServerLevel serverLevel : server.getAllLevels()) {
+            List<Component> worldTimes = new ArrayList<>();
+            worldTimes.addAll(eval(serverLevel.tickTimes5s.getTimes()));
+            worldTimes.addAll(eval(serverLevel.tickTimes10s.getTimes()));
+            worldTimes.addAll(eval(serverLevel.tickTimes60s.getTimes()));
+
+            sender.sendMessage(text().content("◴ " + serverLevel.getWorld().getName() + ": ").color(GOLD)
+                .append(text().color(GRAY)
+                    .append(
+                        worldTimes.get(0), SLASH, worldTimes.get(1), SLASH, worldTimes.get(2), text(", ", YELLOW),
+                        worldTimes.get(3), SLASH, worldTimes.get(4), SLASH, worldTimes.get(5), text(", ", YELLOW),
+                        worldTimes.get(6), SLASH, worldTimes.get(7), SLASH, worldTimes.get(8)
+                    )
                 )
-            )
-        );
+            );
+        }
+        // Purpur end
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index b61c4d1ebb9c15a7ecd7bec5eb864851c053fb7e..c0648a2144d7a5b5a436fe459b08bff29a1b35d5 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1575,6 +1575,15 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             try {
                 //worldserver.timings.doTick.startTiming(); // Spigot // Purpur
                 worldserver.tick(shouldKeepTicking);
+                long i = Util.getNanos(); // Purpur - track world's MSPT
+                // Purpur start - track world's MSPT
+                long j = Util.getNanos() - i;
+
+                // These are from the "tickServer" function
+                worldserver.tickTimes5s.add(this.tickCount, j);
+                worldserver.tickTimes10s.add(this.tickCount, j);
+                worldserver.tickTimes60s.add(this.tickCount, j);
+                // Purpur end
                 // Paper start
                 for (final io.papermc.paper.chunk.SingleThreadChunkRegionManager regionManager : worldserver.getChunkSource().chunkMap.regionManagers) {
                     regionManager.recalculateRegions();
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 1c8724fb56e790922c7e8fc73bc97442b7a6df83..2fcebcc1c313ac5424510378e3616b75fc32c00d 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -688,6 +688,12 @@ public class ServerLevel extends Level implements WorldGenLevel {
     }
     // Paper end - optimise nearby player retrieval
 
+    // Purpur start - track world's MSPT
+    public final MinecraftServer.TickTimes tickTimes5s = new MinecraftServer.TickTimes(100);
+    public final MinecraftServer.TickTimes tickTimes10s = new MinecraftServer.TickTimes(200);
+    public final MinecraftServer.TickTimes tickTimes60s = new MinecraftServer.TickTimes(1200);
+    // Purpur end
+
     // Add env and gen to constructor, IWorldDataServer -> WorldDataServer
     public ServerLevel(MinecraftServer minecraftserver, Executor executor, LevelStorageSource.LevelStorageAccess convertable_conversionsession, PrimaryLevelData iworlddataserver, ResourceKey<Level> resourcekey, LevelStem worlddimension, ChunkProgressListener worldloadlistener, boolean flag, long i, List<CustomSpawner> list, boolean flag1, @Nullable RandomSequences randomsequences, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen, org.bukkit.generator.BiomeProvider biomeProvider) {
         // IRegistryCustom.Dimension iregistrycustom_dimension = minecraftserver.registryAccess(); // CraftBukkit - decompile error
