From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: M0diis <modestas.kazlauskas@ktu.edu>
Date: Fri, 19 Jan 2024 11:28:20 +0200
Subject: [PATCH] Spread out sending all player info


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 76641b39a75f906c94d873ce9752d2cafa13d523..0cb553ec08a67138dfa87aa98b1a6a4becf7ac80 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -13,6 +13,7 @@ import java.net.SocketAddress;
 import java.nio.file.Path;
 import java.text.SimpleDateFormat;
 import java.time.Instant;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.EnumSet;
 import java.util.Iterator;
@@ -132,10 +133,11 @@ public abstract class PlayerList {
     public static final Component CHAT_FILTERED_FULL = Component.translatable("chat.filtered_full");
     public static final Component DUPLICATE_LOGIN_DISCONNECT_MESSAGE = Component.translatable("multiplayer.disconnect.duplicate_login");
     private static final Logger LOGGER = LogUtils.getLogger();
-    private static final int SEND_PLAYER_INFO_INTERVAL = 600;
+    public static final int SEND_PLAYER_INFO_INTERVAL = 600; // SlimyPurpur - Spread out sending all player info
     private static final SimpleDateFormat BAN_DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");
     private final MinecraftServer server;
     public final List<ServerPlayer> players = new java.util.concurrent.CopyOnWriteArrayList(); // CraftBukkit - ArrayList -> CopyOnWriteArrayList: Iterator safety
+    private final ServerPlayer[][] sendAllPlayerInfoBuckets = new ServerPlayer[SEND_PLAYER_INFO_INTERVAL][]; // SlimyPurpur - spread out sending all player info
     private final Map<UUID, ServerPlayer> playersByUUID = Maps.newHashMap();
     private final UserBanList bans;
     private final IpBanList ipBans;
@@ -333,6 +335,7 @@ public abstract class PlayerList {
 
         // entityplayer.connection.send(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(this.players)); // CraftBukkit - replaced with loop below
         this.players.add(player);
+        this.addToSendAllPlayerInfoBuckets(player); // SlimyPurpur - spread out sending all player info
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
         this.playersByUUID.put(player.getUUID(), player);
         // this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(entityplayer))); // CraftBukkit - replaced with loop below
@@ -671,6 +674,7 @@ public abstract class PlayerList {
         entityplayer.retireScheduler(); // Paper - Folia schedulers
         entityplayer.getAdvancements().stopListening();
         this.players.remove(entityplayer);
+        this.removeFromSendAllPlayerInfoBuckets(entityplayer); // SlimyPurpur - spread out sending all player info
         this.playersByName.remove(entityplayer.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         this.server.getCustomBossEvents().onPlayerDisconnect(entityplayer);
         UUID uuid = entityplayer.getUUID();
@@ -832,6 +836,7 @@ public abstract class PlayerList {
         // Paper end
         entityplayer.stopRiding(); // CraftBukkit
         this.players.remove(entityplayer);
+        this.removeFromSendAllPlayerInfoBuckets(entityplayer); // SlimyPurpur - spread out sending all player info
         this.playersByName.remove(entityplayer.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         entityplayer.serverLevel().removePlayerImmediately(entityplayer, Entity.RemovalReason.DISCARDED);
         BlockPos blockposition = entityplayer.getRespawnPosition();
@@ -968,6 +973,7 @@ public abstract class PlayerList {
         if (!entityplayer.connection.isDisconnected()) {
             worldserver1.addRespawnedPlayer(entityplayer1);
             this.players.add(entityplayer1);
+            this.addToSendAllPlayerInfoBuckets(entityplayer1); // SlimyPurpur - spread out sending all player info
             this.playersByName.put(entityplayer1.getScoreboardName().toLowerCase(java.util.Locale.ROOT), entityplayer1); // Spigot
             this.playersByUUID.put(entityplayer1.getUUID(), entityplayer1);
         }
@@ -1020,11 +1026,42 @@ public abstract class PlayerList {
         this.sendPlayerPermissionLevel(player, i);
     }
 
+    // SlimyPurpur start - spread out sending all player info
+    private void addToSendAllPlayerInfoBuckets(ServerPlayer player) {
+        ServerPlayer[] sendAllPlayerInfoBucket = this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex];
+        if (sendAllPlayerInfoBucket == null) {
+            this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex] = new ServerPlayer[]{player};
+        } else {
+            this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex] = sendAllPlayerInfoBucket = Arrays.copyOf(sendAllPlayerInfoBucket, sendAllPlayerInfoBucket.length + 1);
+            sendAllPlayerInfoBucket[sendAllPlayerInfoBucket.length - 1] = player;
+        }
+    }
+
+    private void removeFromSendAllPlayerInfoBuckets(ServerPlayer player) {
+        ServerPlayer[] sendAllPlayerInfoBucket = this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex];
+        if (sendAllPlayerInfoBucket != null) {
+            if (sendAllPlayerInfoBucket.length == 1) {
+                if (sendAllPlayerInfoBucket[0] == player) {
+                    this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex] = null;
+                }
+                return;
+            }
+            for (int i = 0; i < sendAllPlayerInfoBucket.length; i++) {
+                if (sendAllPlayerInfoBucket[i] == player) {
+                    sendAllPlayerInfoBucket[i] = sendAllPlayerInfoBucket[sendAllPlayerInfoBucket.length - 1];
+                    this.sendAllPlayerInfoBuckets[player.sendAllPlayerInfoBucketIndex] = Arrays.copyOf(sendAllPlayerInfoBucket, sendAllPlayerInfoBucket.length - 1);
+                }
+            }
+        }
+    }
+    // SlimyPurpur end - spread out sending all player info
+
     public void tick() {
-        if (++this.sendAllPlayerInfoIn > 600) {
-            // CraftBukkit start
-            for (int i = 0; i < this.players.size(); ++i) {
-                final ServerPlayer target = (ServerPlayer) this.players.get(i);
+        // SlimyPurpur start - spread out sending all player info
+        ServerPlayer[] sendAllPlayerInfoBucket = this.sendAllPlayerInfoBuckets[this.sendAllPlayerInfoIn];
+        if (sendAllPlayerInfoBucket != null) {
+            for (ServerPlayer target : sendAllPlayerInfoBucket) {
+                // SlimyPurpur end - spread out sending all player info
 
                 target.connection.send(new ClientboundPlayerInfoUpdatePacket(EnumSet.of(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_LATENCY), this.players.stream().filter(new Predicate<ServerPlayer>() {
                     @Override
@@ -1033,10 +1070,11 @@ public abstract class PlayerList {
                     }
                 }).collect(Collectors.toList())));
             }
-            // CraftBukkit end
+        }
+        if (++this.sendAllPlayerInfoIn >= SEND_PLAYER_INFO_INTERVAL) {
+            // SlimyPurpur - spread out sending all player info
             this.sendAllPlayerInfoIn = 0;
         }
-
     }
 
     public void broadcastAll(Packet<?> packet) {
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 3ec7b6af829a925f9a0e0ef4ddcf343a2f5e73a5..49ce37f61771be5b02d76a72d3c98194cb8e4558 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -39,6 +39,7 @@ import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.server.players.PlayerList;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
@@ -223,12 +224,15 @@ public abstract class Player extends LivingEntity {
     }
     // Purpur end
 
+    public final int sendAllPlayerInfoBucketIndex; // SlimyPurpur - spread out sending all player info
+
     public Player(Level world, BlockPos pos, float yaw, GameProfile gameProfile) {
         super(EntityType.PLAYER, world);
         this.lastItemInMainHand = ItemStack.EMPTY;
         this.cooldowns = this.createItemCooldowns();
         this.lastDeathLocation = Optional.empty();
         this.setUUID(gameProfile.getId());
+        this.sendAllPlayerInfoBucketIndex = Math.floorMod(this.uuid.hashCode(), PlayerList.SEND_PLAYER_INFO_INTERVAL); // SlimyPurpur - spread out sending all player info
         this.gameProfile = gameProfile;
         this.inventoryMenu = new InventoryMenu(this.inventory, !world.isClientSide, this);
         this.containerMenu = this.inventoryMenu;
